[{"D:\\Projects\\Portfolio\\freespeech2025\\src\\index.js":"1","D:\\Projects\\Portfolio\\freespeech2025\\src\\reportWebVitals.js":"2","D:\\Projects\\Portfolio\\freespeech2025\\src\\App.js":"3","D:\\Projects\\Portfolio\\freespeech2025\\src\\components\\FuturePage\\FuturePage.js":"4","D:\\Projects\\Portfolio\\freespeech2025\\src\\components\\IntroPage\\IntroPage.js":"5","D:\\Projects\\Portfolio\\freespeech2025\\src\\components\\Auth\\Auth.js":"6","D:\\Projects\\Portfolio\\freespeech2025\\src\\components\\Form\\Form.js":"7","D:\\Projects\\Portfolio\\freespeech2025\\src\\utils\\firebase.js":"8"},{"size":613,"mtime":1607891655609,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1607740358506,"results":"11","hashOfConfig":"10"},{"size":1955,"mtime":1607891655593,"results":"12","hashOfConfig":"10"},{"size":518,"mtime":1607892188743,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1607891655595,"results":"14","hashOfConfig":"10"},{"size":4539,"mtime":1607891655593,"results":"15","hashOfConfig":"10"},{"size":4213,"mtime":1607961418393,"results":"16","hashOfConfig":"10"},{"size":628,"mtime":1607792937209,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1eqx1en",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Projects\\Portfolio\\freespeech2025\\src\\index.js",[],["37","38"],"D:\\Projects\\Portfolio\\freespeech2025\\src\\reportWebVitals.js",[],"D:\\Projects\\Portfolio\\freespeech2025\\src\\App.js",["39","40","41"],"import './App.css';\r\nimport React, {useState, useContext} from 'react';\r\nimport IntroPage from './components/IntroPage/IntroPage';\r\nimport FuturePage from './components/FuturePage/FuturePage';\r\nimport {useTransition, animated} from 'react-spring';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport {__RouterContext} from 'react-router';\r\nimport Auth from \"./components/Auth/Auth\";\r\nimport Form from \"./components/Form/Form\";\r\n\r\n// import manageJson from \"./utils/manageJson\"   /* util for loading json to firebase */\r\n\r\nfunction App() {\r\n    //     /* uncomment if needed to load json into firebase.database */\r\n// React.useEffect(() => {\r\n//     manageJson();\r\n// },[]);\r\n    \r\n    const {location} = useContext(__RouterContext);\r\n    const transitions = useTransition(location, location => location.pathname, {\r\n        from: {opacity: 0, transform: \"translate(100%, 0)\", display: \"none\"},\r\n        enter: {opacity: 1, transform: \"translate(0%, 0)\", display: \"flex \"},\r\n        leave: {opacity: 0, transform: \"translate(-50%, 0)\", display: \"none\"}\r\n    });\r\n    \r\n    return (\r\n        <div className=\"App\">\r\n            {transitions.map(({item, props, key}) => (\r\n                <animated.div key={key} style={props}>\r\n                    <Switch location={item}>\r\n                        {/* Вступительная страница с кнопкой \"Поехали\" */}\r\n                        <Route exact path=\"/\">\r\n                            <IntroPage/>\r\n                        </Route>\r\n                        \r\n                        {/* Страница 2025 года - пока там хедер и форма авторизации */}\r\n                        <Route exact path=\"/future\">\r\n                            <FuturePage/>\r\n                        </Route>\r\n                    </Switch>\r\n                </animated.div>\r\n            ))}\r\n            {/*<Form/>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","D:\\Projects\\Portfolio\\freespeech2025\\src\\components\\FuturePage\\FuturePage.js",[],"D:\\Projects\\Portfolio\\freespeech2025\\src\\components\\IntroPage\\IntroPage.js",[],"D:\\Projects\\Portfolio\\freespeech2025\\src\\components\\Auth\\Auth.js",["42","43"],"// здесь находится тестовый код для регистрации пользователя по линку в e-mail\r\nimport React, {useState, useEffect} from 'react';\r\nimport './auth.css'\r\nimport {auth, db} from '../../utils/firebase'\r\n\r\nfunction Auth() {\r\n    \r\n    const [isSignUpClicked, setIsSignUpClicked] = useState(false)\r\n    const [isLogOutClicked, setIsLogOutClicked] = useState(false)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [currentUser, setCurrentUser] = useState('Unknown')\r\n    \r\n    const [values, setValues] = useState({ email: '' })\r\n    \r\n    const actionCodeSettings = {\r\n        url: window.location.href,\r\n        handleCodeInApp: true\r\n    };\r\n    \r\n    // определяем юзер на сайте или нет\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                setIsLoggedIn(true)\r\n                setCurrentUser(user.email)\r\n            } else {\r\n                setIsLoggedIn(false)\r\n                setCurrentUser('Unknown')\r\n            }\r\n        });\r\n    }, [isLoggedIn])\r\n    \r\n    // Confirm the link is a sign-in with email link.\r\n    useEffect(() => {\r\n        if (auth.isSignInWithEmailLink(window.location.href)) {\r\n            let email = window.localStorage.getItem('emailForSignIn');\r\n            if (!email) {\r\n                email = window.prompt('Please provide your email for confirmation');\r\n            }\r\n            // The client SDK will parse the code from the link for you.\r\n            if (email) {\r\n                auth.signInWithEmailLink(email, window.location.href).then(function (result) {\r\n                    window.location.href = \"https://freespeech2025.com/\"\r\n                    window.localStorage.removeItem('emailForSignIn');\r\n                }).catch(function (error) {\r\n                    console.log(error)\r\n                });\r\n            }\r\n        }\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        if (isSignUpClicked) {\r\n            auth.sendSignInLinkToEmail(values.email, actionCodeSettings)\r\n                .then(function () {\r\n                    window.localStorage.setItem('emailForSignIn', values.email);\r\n                    console.log('The link was successfully sent')\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n            setIsSignUpClicked(false)\r\n        }\r\n    }, [isSignUpClicked])\r\n    \r\n    useEffect(() => {\r\n        if (isLogOutClicked) {\r\n            auth.signOut().then(function () {\r\n                console.log('Sign-out successful');\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n            setIsLogOutClicked(false)\r\n        }\r\n    }, [isLogOutClicked])\r\n    \r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setValues({...values, [name]: value});\r\n    }\r\n    \r\n    function handleSignUp(e) {\r\n        e.preventDefault();\r\n        setIsSignUpClicked(true)\r\n    }\r\n    \r\n    function handleLogout(e) {\r\n        e.preventDefault();\r\n        setIsLogOutClicked(true)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"authForm\">\r\n            <form className=\"form form-sign-up\" name=\"form-signup\" noValidate>\r\n                <h2 className=\"form__heading\">Sign UP With Email Link 11</h2>\r\n                <h2 className=\"form__heading\">User: {currentUser}</h2>\r\n                <fieldset className=\"form__fields\">\r\n                    <label className=\"form__field-input\">\r\n                        <input\r\n                            className=\"form__input form__input-first-field\"\r\n                            type=\"email\"\r\n                            id=\"first-field-place\"\r\n                            placeholder=\"e-mail\"\r\n                            name=\"email\"\r\n                            minLength=\"5\"\r\n                            maxLength=\"130\"\r\n                            required\r\n                            autoComplete=\"username\"\r\n                            onChange={handleChange}\r\n                        />\r\n                        <span className=\"form__field\"/>\r\n                    </label>\r\n                    <button type=\"submit\" className=\"form__submit-button\" onClick={handleSignUp}>Sign Up</button>\r\n                    <button type=\"submit\" className=\"form__submit-button\" onClick={handleLogout}>Log Out</button>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n\r\n\r\n","D:\\Projects\\Portfolio\\freespeech2025\\src\\components\\Form\\Form.js",["44","45","46"],"D:\\Projects\\Portfolio\\freespeech2025\\src\\utils\\firebase.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":16,"nodeType":"53","messageId":"54","endLine":2,"endColumn":24},{"ruleId":"51","severity":1,"message":"55","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":12},{"ruleId":"51","severity":1,"message":"56","line":9,"column":8,"nodeType":"53","messageId":"54","endLine":9,"endColumn":12},{"ruleId":"51","severity":1,"message":"57","line":4,"column":15,"nodeType":"53","messageId":"54","endLine":4,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":64,"column":8,"nodeType":"60","endLine":64,"endColumn":25,"suggestions":"61"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":16,"nodeType":"53","messageId":"54","endLine":1,"endColumn":24},{"ruleId":"58","severity":1,"message":"62","line":19,"column":8,"nodeType":"60","endLine":19,"endColumn":25,"suggestions":"63"},{"ruleId":"51","severity":1,"message":"64","line":32,"column":15,"nodeType":"53","messageId":"54","endLine":32,"endColumn":20},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'Form' is defined but never used.","'db' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'actionCodeSettings' and 'values.email'. Either include them or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'complaintValues.tag'. Either include it or remove the dependency array.",["68"],"'query' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [actionCodeSettings, isSignUpClicked, values.email]",{"range":"73","text":"74"},"Update the dependencies array to be: [complaintValues.tag, isSubmitClicked]",{"range":"75","text":"76"},[2375,2392],"[actionCodeSettings, isSignUpClicked, values.email]",[506,523],"[complaintValues.tag, isSubmitClicked]"]