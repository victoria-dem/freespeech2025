[{"/Users/annakozevatova/dev/freespeech2025/src/index.js":"1","/Users/annakozevatova/dev/freespeech2025/src/reportWebVitals.js":"2","/Users/annakozevatova/dev/freespeech2025/src/App.js":"3","/Users/annakozevatova/dev/freespeech2025/src/components/FuturePage/FuturePage.js":"4","/Users/annakozevatova/dev/freespeech2025/src/components/IntroPage/IntroPage.js":"5","/Users/annakozevatova/dev/freespeech2025/src/components/Auth/Auth.js":"6","/Users/annakozevatova/dev/freespeech2025/src/components/Form/Form.js":"7","/Users/annakozevatova/dev/freespeech2025/src/components/PetitionForm/PetitionForm.js":"8","/Users/annakozevatova/dev/freespeech2025/src/utils/firebase.js":"9","/Users/annakozevatova/dev/freespeech2025/src/components/Card/Card.js":"10","/Users/annakozevatova/dev/freespeech2025/src/components/SignUpForm/SignUpForm.js":"11","/Users/annakozevatova/dev/freespeech2025/src/contexts/CurrentUserContext.js":"12"},{"size":593,"mtime":1607864794444,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607762091492,"results":"15","hashOfConfig":"14"},{"size":2735,"mtime":1607961362476,"results":"16","hashOfConfig":"14"},{"size":495,"mtime":1607960377343,"results":"17","hashOfConfig":"14"},{"size":487,"mtime":1607864794424,"results":"18","hashOfConfig":"14"},{"size":4111,"mtime":1607963635306,"results":"19","hashOfConfig":"14"},{"size":3452,"mtime":1607954375368,"results":"20","hashOfConfig":"14"},{"size":6985,"mtime":1607963541323,"results":"21","hashOfConfig":"14"},{"size":681,"mtime":1607954375369,"results":"22","hashOfConfig":"14"},{"size":1942,"mtime":1607963617972,"results":"23","hashOfConfig":"14"},{"size":1361,"mtime":1607962487702,"results":"24","hashOfConfig":"14"},{"size":113,"mtime":1607954792627,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"bncqrn",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/annakozevatova/dev/freespeech2025/src/index.js",[],["56","57"],"/Users/annakozevatova/dev/freespeech2025/src/reportWebVitals.js",[],"/Users/annakozevatova/dev/freespeech2025/src/App.js",["58","59","60"],"import './App.css';\nimport React, { useState, useContext, useEffect } from 'react';\nimport IntroPage from './components/IntroPage/IntroPage';\nimport FuturePage from './components/FuturePage/FuturePage';\nimport { useTransition, animated } from 'react-spring';\nimport { Switch, Route } from 'react-router-dom';\nimport { __RouterContext } from 'react-router';\nimport Auth from \"./components/Auth/Auth\";\nimport Form from \"./components/Form/Form\";\nimport CurrentUserContext from './contexts/CurrentUserContext';\n\n// import manageJson from \"./utils/manageJson\"   /* util for loading json to firebase */\n\nfunction App() {\n    //     /* uncomment if needed to load json into firebase.database */\n    // React.useEffect(() => {\n    //     manageJson();\n    // },[]);\n\n    const [currentUser, setCurrentUser] = useState({});\n    const [isUserLoggedIn, setIsUserLoggedin] = useState(false);\n    const { location } = useContext(__RouterContext);\n    const transitions = useTransition(location, location => location.pathname, {\n        from: { opacity: 0, transform: \"translate(100%, 0)\", display: \"none\" },\n        enter: { opacity: 1, transform: \"translate(0%, 0)\", display: \"flex \" },\n        leave: { opacity: 0, transform: \"translate(-50%, 0)\", display: \"none\" }\n    });\n\n    const checkIsUserLoggedIn = (user) => {\n        if(Object.keys(user).length===0) {\n            setIsUserLoggedin(false);\n        } else {\n            setIsUserLoggedin(true);\n        }\n        console.log(isUserLoggedIn.toString());\n    }\n\n    const handleUserUpdate = (user) => {\n        setCurrentUser(user);\n        checkIsUserLoggedIn(user);\n    }\n\n    useEffect(()=> {\n        checkIsUserLoggedIn(currentUser);\n    }, []);\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"App\">\n                {transitions.map(({ item, props, key }) => (\n                    <animated.div key={key} style={props}>\n                        <Switch location={item}>\n                            {/* Вступительная страница с кнопкой \"Поехали\" */}\n                            <Route exact path=\"/\">\n                                <IntroPage />\n                            </Route>\n\n                            {/* Страница 2025 года - пока там хедер и форма авторизации */}\n                            <Route exact path=\"/future\">\n                                <FuturePage onUpdateUser={handleUserUpdate} />\n                            </Route>\n                        </Switch>\n                    </animated.div>\n                ))}\n                {/*<Form/>*/}\n            </div>\n        </CurrentUserContext.Provider>\n\n    );\n}\n\nexport default App;","/Users/annakozevatova/dev/freespeech2025/src/components/FuturePage/FuturePage.js",[],"/Users/annakozevatova/dev/freespeech2025/src/components/IntroPage/IntroPage.js",[],"/Users/annakozevatova/dev/freespeech2025/src/components/Auth/Auth.js",["61","62","63","64"],"// здесь находится тестовый код для регистрации пользователя по линку в e-mail\nimport React, { useState, useEffect, useContext } from 'react';\nimport './auth.css'\nimport '../PetitionForm/petitionform.css'\nimport { auth } from '../../utils/firebase'\nimport PetitionForm from \"../PetitionForm/PetitionForm\";\nimport SignUpForm from '../SignUpForm/SignUpForm';\n\n\nfunction Auth({ onUpdateUser }) {\n    const [isSignUpClicked, setIsSignUpClicked] = useState(false)\n    const [isLogOutClicked, setIsLogOutClicked] = useState(false)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n    //current user устанавливается в методе onUpdateUser\n    // const [currentUser, setCurrentUser] = useState('Unknown')\n    const [currentUserId, setCurrentUserId] = useState('')\n\n\n    const [values, setValues] = useState({ email: '' })\n\n    const actionCodeSettings = {\n        url: window.location.href,\n        handleCodeInApp: true\n    };\n\n\n    // определяем юзер на сайте или нет\n    useEffect(() => {\n        auth.onAuthStateChanged(function (user) {\n            if (user) {\n                setIsLoggedIn(true)\n                // setCurrentUser(user.email)\n                setCurrentUserId(user.uid)\n                onUpdateUser({ user });\n            } else {\n                setIsLoggedIn(false)\n                // setCurrentUser('Unknown')\n                onUpdateUser({});\n            }\n        });\n    }, [isLoggedIn])\n\n    // Confirm the link is a sign-in with email link.\n    useEffect(() => {\n        if (auth.isSignInWithEmailLink(window.location.href)) {\n            let email = window.localStorage.getItem('emailForSignIn');\n            if (!email) {\n                email = window.prompt('Please provide your email for confirmation');\n            }\n            // The client SDK will parse the code from the link for you.\n            if (email) {\n                auth.signInWithEmailLink(email, window.location.href).then(function (result) {\n                    window.location.href = \"https://freespeech2025.com/future\"\n                    window.localStorage.removeItem('emailForSignIn');\n                }).catch(function (error) {\n                    console.log(error)\n                });\n            }\n        }\n    }, [])\n\n    useEffect(() => {\n        if (isSignUpClicked) {\n            auth.sendSignInLinkToEmail(values.email, actionCodeSettings)\n                .then(function () {\n                    window.localStorage.setItem('emailForSignIn', values.email);\n                    console.log('The link was successfully sent')\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n            setIsSignUpClicked(false)\n        }\n    }, [isSignUpClicked])\n\n    useEffect(() => {\n        if (isLogOutClicked) {\n            auth.signOut().then(function () {\n                console.log('Sign-out successful');\n                setCurrentUserId('')\n                onUpdateUser({});\n            }).catch(function (error) {\n                console.log(error);\n            });\n            setIsLogOutClicked(false)\n        }\n    }, [isLogOutClicked])\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setValues({ ...values, [name]: value });\n    }\n\n    function handleSignUp(e) {\n        e.preventDefault();\n        setIsSignUpClicked(true)\n    }\n\n    function handleLogout(e) {\n        e.preventDefault();\n        setIsLogOutClicked(true)\n    }\n\n    return (\n        <>\n            {/* currentUser теперь берется в самом компоненте формы из контекста */}\n            <SignUpForm onChange={handleChange} onSignUp={handleSignUp} onLogout={handleLogout} />\n\n            {/* TODO: возможно,имеет смысл в этой форме тоже находить currentUser через контест \n                и брать его ID */}\n            <PetitionForm currentUserId={currentUserId}/>\n        </>\n    )\n};\n\nexport default Auth;\n\n\n","/Users/annakozevatova/dev/freespeech2025/src/components/Form/Form.js",["65","66","67","68","69","70","71"],"import React, {useState, useEffect} from 'react';\nimport './form.css'\nimport {db} from '../../utils/firebase'\n\nfunction Form() {\n\n    const [isSubmitClicked, setIsSubmitClicked] = React.useState(false)\n    const [values, setValues] = React.useState('')\n    const [complaintWord, setComplaintWord] = React.useState( '')\n    const [poemText, setPoemText] = React.useState( '')\n\n\n    useEffect(() => {\n        if (isSubmitClicked) {\n            // setComplaintWord(values)\n            console.log( determinateComplaintWord(values));\n            // determinateComplaintWord(values);\n            getPoemText( determinateComplaintWord(values));\n        }\n    }, [isSubmitClicked])\n\n    const determinateComplaintWord = (string) => {\n        const worddd = string.match(/[а-яА-ЯёЁ]*а\\s/gm);\n        if (!worddd) {\n            return \"жизни\"\n        }\n        console.log(worddd)\n        return worddd\n    }\n\n    const getPoemText = (word) => {\n        const poemsRef = db.collection(\"poems\");\n        const query = poemsRef.where(\"name\", \"array-contains\", word);\n        db.collection(\"poems\").where(\"name\", \"array-contains\", word)\n            .get()\n            .then(function(querySnapshot) {\n                querySnapshot.forEach(function(doc) {\n                    // doc.data() is never undefined for query doc snapshots\n                    // setPoemText(doc.data().text);\n                    const dataText = doc.data().text;\n                    setPoemText(doc.data().text.toString());\n                    console.log('const',dataText);\n                    setTimeout(function() {console.log('set', poemText);}, 2000)\n                    console.log('typeof', typeof dataText)\n                    console.log('typeof', typeof dataText)\n\n                });\n            })\n            .catch(function(error) {\n                console.log(\"Error getting documents: \", error);\n            }).finally (() =>  setTimeout(function() {console.log('set', poemText);}, 2000));\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setValues(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsSubmitClicked(true)\n    }\n\n    return (\n\n        <div className=\"form-complaint\">\n            <form className=\"form form_complaint\" name=\"form-complaint\" noValidate>\n                <h2 className=\"form__heading\">Ваша жалоба</h2>\n                <fieldset className=\"form__fields\">\n                    <label className=\"form__field-input\">\n                        <input\n                            className=\"form__input form__input-first-field\"\n                            type=\"textarea\"\n                            id=\"first-field-place\"\n                            placeholder=\"Опишите подробно что вас волнует\"\n                            name=\"complaint\"\n                            minLength=\"10\"\n                            maxLength=\"130\"\n                            required\n                            // autoComplete=\"username\"\n                            onChange={handleChange}\n                        />\n                        <span className=\"form__field\"/>\n                    </label>\n                     <button type=\"submit\" className=\"form__submit-button\" onClick={handleSubmit}>Submit</button>\n                </fieldset>\n            </form>\n            <p>{poemText}</p>\n        </div>\n    )\n}\n\nexport default Form\n","/Users/annakozevatova/dev/freespeech2025/src/components/PetitionForm/PetitionForm.js",["72","73","74"],"import React, {useContext, useEffect, useState} from 'react';\nimport './petitionform.css'\nimport {db, storage} from '../../utils/firebase'\nimport Card from \"../Card/Card\";\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\n\nfunction PetitionForm(props) {\n    const currentUser = useContext(CurrentUserContext);\n    \n    const [isPetitionSubmitted, setIsPetitionSubmitted] = useState(false)\n    const [values, setValues] = useState({\n        petition: '',\n        firstTag: '',\n        secondTag: '',\n        picFullPath: '',\n        picName: '',\n        picBucket: ''\n        \n    })\n    const [pictures, setPictures] = useState([])\n    const [isPicturesReady, setIsPicturesReady] = useState(false)\n    const [picturesRef, setPicturesRef] = useState({})\n    \n    useEffect(() => {\n        //TODO: вот здесь заменить props.currentUSerId на currentUser.uid\n        if (isPetitionSubmitted && props.currentUserId) {\n            const timestamp = Date.now().toString()\n            // TODO: обсудить использование ключа isPublic\n            db.collection(\"petitions\").add({\n                //TODO: и здесь заменить props.currentUSerId на currentUser.uid\n                    uid: props.currentUserId,\n                    petition: values.petition,\n                    firstTag: values.firstTag,\n                    secondTag: values.secondTag,\n                    isPublic: false,\n                    picFullPath: picturesRef.fullPath || '1.jpeg',\n                    picName: picturesRef.name || '1.jpeg',\n                    picBucket: picturesRef.bucket || 'freespeech2025-46bc5.appspot.com',\n                    timestamp: timestamp\n                })\n                .then(function (docRef) {\n                    console.log(\"Document written with ID: \", docRef);\n                })\n                .catch(function (error) {\n                    console.error(\"Error adding document: \", error);\n                });\n        }\n    }, [isPetitionSubmitted])\n    \n    useEffect(() => {\n        // TODO: подумать надо ли нам сделать внутренний backed для картинок\n        //TODO: вот здесь заменить props.currentUSerId на currentUser.uid\n        if (isPicturesReady && props.currentUserId) {\n            const storageRef = storage.ref();\n            const thisRef = storageRef.child(pictures.name);\n            console.log(thisRef.bucket, thisRef.name, thisRef.fullPath);\n            setPicturesRef(thisRef);\n            // TODO: сейчас картинка загружается под своим именем -\n            //  надо попробовать загружать ее под именем timestamp+имя\n            thisRef.put(pictures).then(function (snapshot) {\n                // TODO: надо будет попробовать обработать визуализацию загрузки картинки при помощи snapshot.\n                //  В файле test.html есть пример как получить данные для отображения загрузки.\n            }).catch((err) => console.log(err));\n        }\n    }, [isPicturesReady])\n    \n    const handleChange = e => {\n        const {name, value} = e.target;\n        setValues({...values, [name]: value})\n    }\n    \n    function handleSubmitPetition(e) {\n        e.preventDefault();\n        setIsPetitionSubmitted(true)\n    }\n    \n    function handleChoosePictures(e) {\n        e.preventDefault();\n        setPictures(e.target.files[0])\n    }\n    \n    function handleSubmitPictures(e) {\n        e.preventDefault();\n        setIsPicturesReady(!isPicturesReady)\n    }\n    \n    return (\n        \n        <div className=\"form-complaint\">\n            <form className=\"form form_complaint\" name=\"form-complaint\" noValidate>\n                <h2 className=\"form__heading\">Сгенерированная петиция</h2>\n                <fieldset className=\"form__fields\">\n                    \n                    <label className=\"form__field-input\">\n                        <input\n                            className=\"form__input form__input-first-field\"\n                            type=\"textarea\"\n                            id=\"first-field-place\"\n                            placeholder=\"Здесь, типа, уже готовый стих\"\n                            name=\"petition\"\n                            minLength=\"10\"\n                            maxLength=\"130\"\n                            required\n                            onChange={handleChange}\n                        />\n                        <span className=\"form__field\"/>\n                    </label>\n                    \n                    <label className=\"form__field-input\">\n                        <input\n                            className=\"form__input form__input-first-field\"\n                            type=\"textarea\"\n                            id=\"second-field-place\"\n                            placeholder=\"Добавьте тег\"\n                            name=\"firstTag\"\n                            minLength=\"10\"\n                            maxLength=\"130\"\n                            required\n                            onChange={handleChange}\n                        />\n                        <span className=\"form__field\"/>\n                    </label>\n                    \n                    <label className=\"form__field-input\">\n                        <input\n                            className=\"form__input form__input-first-field\"\n                            type=\"textarea\"\n                            id=\"second-field-place\"\n                            placeholder=\"Добавьте тег\"\n                            name=\"secondTag\"\n                            minLength=\"10\"\n                            maxLength=\"130\"\n                            required\n                            onChange={handleChange}\n                        />\n                        <span className=\"form__field\"/>\n                    </label>\n                    <label>\n                        <input className=\"form__input\" type=\"file\" id=\"files\" multiple\n                               onChange={handleChoosePictures} name=\"files[]\"\n                               placeholder=\"Выберите картинку\"\n                        />\n                        <button className=\"form__submit-button\" id=\"send\" onClick={handleSubmitPictures}>Загрузить\n                            картинку\n                        </button>\n                    </label>\n                    <button type=\"submit\" className=\"form__submit-button\" onClick={handleSubmitPetition}>Подать\n                        петицию\n                    </button>\n                </fieldset>\n            </form>\n            {/* <Card currentUser={props.currentUser}/> */}\n            <Card/>\n        </div>\n    )\n}\n\nexport default PetitionForm\n","/Users/annakozevatova/dev/freespeech2025/src/utils/firebase.js",[],"/Users/annakozevatova/dev/freespeech2025/src/components/Card/Card.js",["75","76"],"import React, {useContext, useEffect, useState} from 'react';\nimport './card.css'\nimport {storage, db, auth} from '../../utils/firebase'\nimport CurrentUserContext from '../../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    const currentUser = useContext(CurrentUserContext);\n    const [url, setUrl] = useState('')\n    const [petition, setPetition] = useState('')\n    const [firstTag, setFirstTag] = useState('')\n    const [secondTag, setSecondTag] = useState('')\n    const [petitionData, setPetitionData] = useState('')\n    const [path, setPath] = useState('')\n    \n    db.collection('petitions')\n        .orderBy(\"timestamp\", \"desc\")\n        .limit(1)\n        .get()\n        .then(petitions => {\n        petitions.forEach(doc => {\n            setPetition(doc.data().petition)\n            setFirstTag(doc.data().firstTag)\n            setSecondTag(doc.data().secondTag)\n            // TODO: перевести время из timestamp в реальное время + 5 лет\n            setPetitionData(doc.data().timestamp)\n            setPath(doc.data().picFullPath)\n        })\n        })\n        .catch(err=>console.log(err))\n    \n    \n    const storagePic = storage.ref(path);\n    console.log(currentUser);\n    // console.log(props.currentUser)\n    storagePic\n        .getDownloadURL()\n        .then(function(url) {\n            console.log(url);\n            setUrl(url)\n        })\n        .catch(function(error) {\n            console.log(\"error encountered\");\n        });\n    \n    \n    return (\n        <div className=\"card\">\n            <p>Актуальная петиция</p>\n            <p>Текст петиции: {petition}</p>\n            <p>Первый тег: {firstTag}</p>\n            <p>Второй тег: {secondTag}</p>\n            <p>Время (пока условное): {petitionData}</p>\n            <img className=\"photo\" src={url} alt={'картинка'}/>\n        </div>\n)\n}\n\nexport default Card","/Users/annakozevatova/dev/freespeech2025/src/components/SignUpForm/SignUpForm.js",[],"/Users/annakozevatova/dev/freespeech2025/src/contexts/CurrentUserContext.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":8,"column":8,"nodeType":"83","messageId":"84","endLine":8,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":9,"column":8,"nodeType":"83","messageId":"84","endLine":9,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":45,"column":8,"nodeType":"88","endLine":45,"endColumn":10,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"90","line":2,"column":38,"nodeType":"83","messageId":"84","endLine":2,"endColumn":48},{"ruleId":"86","severity":1,"message":"91","line":41,"column":8,"nodeType":"88","endLine":41,"endColumn":20,"suggestions":"92"},{"ruleId":"86","severity":1,"message":"93","line":74,"column":8,"nodeType":"88","endLine":74,"endColumn":25,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"91","line":87,"column":8,"nodeType":"88","endLine":87,"endColumn":25,"suggestions":"95"},{"ruleId":"81","severity":1,"message":"96","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"81","severity":1,"message":"97","line":9,"column":12,"nodeType":"83","messageId":"84","endLine":9,"endColumn":25},{"ruleId":"81","severity":1,"message":"98","line":9,"column":27,"nodeType":"83","messageId":"84","endLine":9,"endColumn":43},{"ruleId":"86","severity":1,"message":"99","line":20,"column":8,"nodeType":"88","endLine":20,"endColumn":25,"suggestions":"100"},{"ruleId":"81","severity":1,"message":"101","line":33,"column":15,"nodeType":"83","messageId":"84","endLine":33,"endColumn":20},{"ruleId":"81","severity":1,"message":"102","line":55,"column":16,"nodeType":"83","messageId":"84","endLine":55,"endColumn":20},{"ruleId":"81","severity":1,"message":"103","line":55,"column":22,"nodeType":"83","messageId":"84","endLine":55,"endColumn":27},{"ruleId":"81","severity":1,"message":"104","line":8,"column":11,"nodeType":"83","messageId":"84","endLine":8,"endColumn":22},{"ruleId":"86","severity":1,"message":"105","line":48,"column":8,"nodeType":"88","endLine":48,"endColumn":29,"suggestions":"106"},{"ruleId":"86","severity":1,"message":"107","line":65,"column":8,"nodeType":"88","endLine":65,"endColumn":25,"suggestions":"108"},{"ruleId":"81","severity":1,"message":"109","line":1,"column":28,"nodeType":"83","messageId":"84","endLine":1,"endColumn":37},{"ruleId":"81","severity":1,"message":"110","line":3,"column":22,"nodeType":"83","messageId":"84","endLine":3,"endColumn":26},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIsUserLoggedIn' and 'currentUser'. Either include them or remove the dependency array.","ArrayExpression",["113"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'onUpdateUser'. Either include it or remove the dependency array. If 'onUpdateUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],"React Hook useEffect has missing dependencies: 'actionCodeSettings' and 'values.email'. Either include them or remove the dependency array.",["115"],["116"],"'useState' is defined but never used.","'complaintWord' is assigned a value but never used.","'setComplaintWord' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPoemText' and 'values'. Either include them or remove the dependency array.",["117"],"'query' is assigned a value but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'picturesRef.bucket', 'picturesRef.fullPath', 'picturesRef.name', 'props.currentUserId', 'values.firstTag', 'values.petition', and 'values.secondTag'. Either include them or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'pictures' and 'props.currentUserId'. Either include them or remove the dependency array.",["119"],"'useEffect' is defined but never used.","'auth' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [checkIsUserLoggedIn, currentUser]",{"range":"134","text":"135"},"Update the dependencies array to be: [isLoggedIn, onUpdateUser]",{"range":"136","text":"137"},"Update the dependencies array to be: [actionCodeSettings, isSignUpClicked, values.email]",{"range":"138","text":"139"},"Update the dependencies array to be: [isLogOutClicked, onUpdateUser]",{"range":"140","text":"141"},"Update the dependencies array to be: [getPoemText, isSubmitClicked, values]",{"range":"142","text":"143"},"Update the dependencies array to be: [isPetitionSubmitted, picturesRef.bucket, picturesRef.fullPath, picturesRef.name, props.currentUserId, values.firstTag, values.petition, values.secondTag]",{"range":"144","text":"145"},"Update the dependencies array to be: [isPicturesReady, pictures, props.currentUserId]",{"range":"146","text":"147"},[1691,1693],"[checkIsUserLoggedIn, currentUser]",[1399,1411],"[isLoggedIn, onUpdateUser]",[2716,2733],"[actionCodeSettings, isSignUpClicked, values.email]",[3105,3122],"[isLogOutClicked, onUpdateUser]",[656,673],"[getPoemText, isSubmitClicked, values]",[1947,1968],"[isPetitionSubmitted, picturesRef.bucket, picturesRef.fullPath, picturesRef.name, props.currentUserId, values.firstTag, values.petition, values.secondTag]",[2892,2909],"[isPicturesReady, pictures, props.currentUserId]"]